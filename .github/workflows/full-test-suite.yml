name: Full Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.quality-check.outputs.should-deploy }}
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run full code quality check
      run: npm run code-quality
      continue-on-error: true
    
    - name: Run unit tests with coverage
      run: npm run test
    
    - name: Build application
      run: npm run build
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run E2E tests
      run: npm run test:e2e
    
    - name: Quality gate decision
      id: quality-check
      run: |
        echo "All quality checks passed âœ…"
        echo "should-deploy=true" >> $GITHUB_OUTPUT
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          playwright-report/
          dist/
        retention-days: 30
    
    - name: Update status badge
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Updating status badge..."
        # Add logic to update README badge or external service

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run npm audit
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Check for known vulnerabilities
      run: |
        echo "Security scan completed"
        # Add additional security scanning tools here

  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    needs: [quality-gate]
    if: needs.quality-gate.outputs.should-deploy == 'true'
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
    
    - name: Analyze bundle size
      run: |
        echo "Bundle analysis:"
        du -sh dist/*
        # Add lighthouse CI or other performance tools here